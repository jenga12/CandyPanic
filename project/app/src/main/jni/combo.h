/*
 *	File：combo.h
 *	Make：HALTokyo AT-14A-275 Toshiki Chizo
 *	Outline：コンボ数表示処理クラス定義
 */

#pragma once
#ifndef _COMBO_H_
#define _COMBO_H_

/******************************************************************************/
/*                            インクルードファイル                            */
/******************************************************************************/
#include "Framework/Vector2D.h"


/******************************************************************************/
/*                              ライブラリリンク                              */
/******************************************************************************/


/******************************************************************************/
/*                              マクロ＆定数定義                              */
/******************************************************************************/


/******************************************************************************/
/*                                 構造体定義                                 */
/******************************************************************************/


/******************************************************************************/
/*                                 クラス定義                                 */
/******************************************************************************/
class C2DSprite;
class C2DNumber;

class CCombo {
	public:
		static CCombo *Create(void);	// インスタンス生成
		void Release(void);				// インスタンス破棄
		void Update(void);				// 更新処理
		
		void Pop(const Vec2 *pos, int combo);		// 表示する
		bool Use(void){
			return m_bUse;
		}
		
	private:
		CCombo();						// コンストラクタ
		~CCombo(){};					// デストラクタ
		void Init(void);				// 初期化処理
		
		bool m_bUse;					// 使用フラグ
		Vec2 m_pos;						// 位置
		float m_fAlpha;					// 不透明度
		unsigned int m_nFrameCount;		// フレームカウンタ
	
		C2DSprite *m_pCombo;			// コンボ
		C2DNumber *m_pNumber;			// コンボ数
};

/******************************************************************************/
/*                              プロトタイプ宣言                              */
/******************************************************************************/


/******************************************************************************/

#endif